var documenterSearchIndex = {"docs":
[{"location":"#ProgressLogging.jl-1","page":"Home","title":"ProgressLogging.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [ProgressLogging]","category":"page"},{"location":"#ProgressLogging.@progress-Tuple","page":"Home","title":"ProgressLogging.@progress","text":"@progress [name=\"\", threshold=0.005] for i = ..., j = ..., ...\n@progress [name=\"\", threshold=0.005] x = [... for i = ..., j = ..., ...]\n\nShow a progress meter named name for the given loop or array comprehension if possible. Update frequency is limited by threshold (one update per 0.5% of progress by default).\n\n\n\n\n\n","category":"macro"},{"location":"#ProgressLogging.progress-Tuple{Any}","page":"Home","title":"ProgressLogging.progress","text":"progress(f::Function; name = \"\")\n\nEvaluates f with id as its argument and makes sure to destroy the progress bar afterwards. To update the progress bar in f you can call a logging statement like @info or even just @logmsg with _id=id and progress as arguments.\n\nprogress can take either of the following values:\n\n0 <= progress < 1: create or update progress bar\nprogress == nothing || progress = NaN: set progress bar to indeterminate progress\nprogress >= 1 || progress == \"done\": destroy progress bar\n\nThe logging message (e.g. \"foo\" in @info \"foo\") will be used as the progress bar's name.\n\nLog level must be higher or equal to LogLevel(-1).\n\nProgressLogging.progress() do id\n    for i = 1:10\n        sleep(0.5)\n        @info \"iterating\" progress=i/10 _id=id\n    end\nend\n\n\n\n\n\n","category":"method"}]
}
